body {
    font: 85% Verdana,Arial,sans-serif;
    padding: 1em;
}
p {
    margin: 0.35em 0;
}
ol, ul, li {
    margin-top: 0.25em;
    margin-bottom: 0.25em;
}
pre {
    white-space: pre;
    color: #060;
    font: 90% Courier New,monospace;
    margin: 0.75em;
}
kbd {
    font: 90% Courier New,monospace;
    color: #060;
}
code {
    font: 100% Courier New,monospace;
    color: #050;
}
em {
    color: #833;
    font-weight: bold;
}
dt {
    color: #336;
    font-weight: bold;
    margin: 0.25em 0;
}
dd {
    margin: 0.25em 2em 0.5em;
}


body {
    padding: 0px;
}

/*
 * Splitter container. Set this to the desired width and height
 * of the combined left and right panes. In this example, the
 * height is fixed and the width is the full width of the body,
 * less the margin on the splitter itself.
 */
#MySplitter {
    height: 380px;
    margin: 1em 0em 0px 0px;
    /*border: 4px solid #bdb;*/
    /* No padding allowed */
}
/*
 * Left-side element of the splitter. Use pixel units for the
 * min-width and max-width; the splitter plugin parses them to
 * determine the splitter movement limits. Set the width to
 * the desired initial width of the element; the plugin changes
 * the width of this element dynamically.
 */
#LeftPane {
    /*background: #efe;*/
    overflow: auto;
    /*padding: 3px;*/
    /* No margin or border allowed */
}
/*
 * Right-side element of the splitter.
 */
#RightPane {
    /*background: #f8fff8;*/
    overflow: auto;
    /*padding: 3px;*/
    /* No margin or border allowed */
}
/* 
 * Splitter bar style; the .active class is added when the
 * mouse is over the splitter or the splitter is focused
 * via the keyboard taborder or an accessKey. 
 */
#MySplitter .vsplitbar {
    width: 4px;
    border-radius: 2px;
    opacity: 0.7;
    background: #dc0000 url(img/vgrabber.gif) no-repeat center;
}
#MySplitter .vsplitbar.active {
    background: #dc4444 url(img/vgrabber.gif) no-repeat center;
    opacity: 0.3;
}